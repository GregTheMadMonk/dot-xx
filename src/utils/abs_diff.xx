/**
 * @file  abs_diff.xx
 * @brief Absolute difference between two numbers
 */
export module dxx.math.utils:abs_diff;

import std;

namespace dxx::math {

/**
 * @brief Default difference is subtraction
 */
struct Sub {
    template <typename T>
    inline constexpr
    T operator()(const T& a, const T& b) { return a - b; }
}; // <-- struct Sub

/**
 * @brief Underflow-safe absolute difference between two numbers
 *
 * Inspired by ARM's `vabdq_u8` instruction and copied from
 * https://www.open-std.org/JTC1/SC22/WG21/docs/papers/2014/n4318.pdf
 */
export
template <typename T, typename Compare = std::less<T>, typename Diff = Sub>
[[nodiscard]]
inline constexpr
T abs_diff(const T& a, const T& b, Compare comp = {}, Diff diff = {}) {
    return comp(a, b) ? diff(b, a) : diff(a, b);
} // <-- abs_diff(a, b, comp, diff)

} // <-- namespace dxx::math
